---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: cubeservers.compute.ionoscloud.crossplane.io
spec:
  group: compute.ionoscloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - ionoscloud
    kind: CubeServer
    listKind: CubeServerList
    plural: cubeservers
    singular: cubeserver
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.datacenterConfig.datacenterId
      name: DATACENTER ID
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: SERVER ID
      type: string
    - jsonPath: .status.atProvider.volumeId
      name: VOLUME ID
      priority: 1
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A CubeServer is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          managementPolicies:
            description: ManagementPolicies determine how should Crossplane controllers
              manage an external resource through an array of ManagementActions.
            items:
              description: A ManagementAction represents an action that the Crossplane
                controllers can take on an external resource.
              enum:
              - Observe
              - Create
              - Update
              - Delete
              - LateInitialize
              - '*'
              type: string
            type: array
          metadata:
            type: object
          spec:
            description: A CubeServerSpec defines the desired state of a Cube Server.
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'CubeServerProperties are the observable fields of a
                  Cube Server. Required values when creating a CubeServer: Datacenter
                  ID or Reference, Template ID or Name, Volume Properties (Name, Bus,
                  Licence Type or Image/Image Alias).'
                properties:
                  availabilityZone:
                    default: AUTO
                    description: The availability zone in which the server should
                      be provisioned.
                    enum:
                    - AUTO
                    - ZONE_1
                    - ZONE_2
                    type: string
                  cpuFamily:
                    description: CPU architecture on which server gets provisioned;
                      not all CPU architectures are available in all datacenter regions;
                      available CPU architectures can be retrieved from the datacenter
                      resource.
                    enum:
                    - AMD_OPTERON
                    - INTEL_SKYLAKE
                    - INTEL_XEON
                    type: string
                  datacenterConfig:
                    description: DatacenterConfig contains information about the datacenter
                      resource on which the server will be created.
                    properties:
                      datacenterId:
                        description: DatacenterID is the ID of the Datacenter on which
                          the resource will be created. It needs to be provided via
                          directly or via reference.
                        format: uuid
                        type: string
                      datacenterIdRef:
                        description: DatacenterIDRef references to a Datacenter to
                          retrieve its ID.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution
                                  of this reference is required. The default is 'Required',
                                  which means the reconcile will fail if the reference
                                  cannot be resolved. 'Optional' means this reference
                                  will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference
                                  should be resolved. The default is 'IfNotPresent',
                                  which will attempt to resolve the reference only
                                  when the corresponding field is not present. Use
                                  'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      datacenterIdSelector:
                        description: DatacenterIDSelector selects reference to a Datacenter
                          to retrieve its DatacenterID.
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with
                              the same controller reference as the selecting object
                              is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution
                                  of this reference is required. The default is 'Required',
                                  which means the reconcile will fail if the reference
                                  cannot be resolved. 'Optional' means this reference
                                  will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference
                                  should be resolved. The default is 'IfNotPresent',
                                  which will attempt to resolve the reference only
                                  when the corresponding field is not present. Use
                                  'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                  name:
                    description: The name of the  resource.
                    type: string
                  template:
                    description: The ID or the name of the template for creating a
                      CUBE server.
                    properties:
                      name:
                        description: The name of the Template from IONOS Cloud.
                        type: string
                      templateId:
                        description: The ID of the Template from IONOS Cloud.
                        format: uuid
                        type: string
                    type: object
                  volume:
                    description: DasVolumeProperties contains properties for the DAS
                      volume attached to the Cube Server.
                    properties:
                      backupUnitConfig:
                        description: BackupUnitCfg contains information about the
                          backup unit resource that the user has access to. The property
                          is immutable and is only allowed to be set on creation of
                          a new a volume. It is mandatory to provide either 'public
                          image' or 'imageAlias' in conjunction with this property.
                        properties:
                          backupUnitId:
                            description: BackupUnitID is the ID of the BackupUnit
                              on which the resource will be created. It needs to be
                              provided via directly or via reference.
                            format: uuid
                            type: string
                          backupUnitIdRef:
                            description: BackupUnitIDRef references to a BackupUnit
                              to retrieve its ID.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference
                                      only when the corresponding field is not present.
                                      Use 'Always' to resolve the reference on every
                                      reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          backupUnitIdSelector:
                            description: BackupUnitIDSelector selects reference to
                              a BackupUnit to retrieve its BackupUnitID.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object
                                  with the same controller reference as the selecting
                                  object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference
                                      only when the corresponding field is not present.
                                      Use 'Always' to resolve the reference on every
                                      reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                      bus:
                        description: The bus type of the volume.
                        enum:
                        - VIRTIO
                        - IDE
                        - UNKNOWN
                        type: string
                      cpuHotPlug:
                        description: Hot-plug capable CPU (no reboot required).
                        type: boolean
                      discVirtioHotPlug:
                        description: Hot-plug capable Virt-IO drive (no reboot required).
                        type: boolean
                      discVirtioHotUnplug:
                        description: Hot-unplug capable Virt-IO drive (no reboot required).
                          Not supported with Windows VMs.
                        type: boolean
                      image:
                        description: 'Image or snapshot ID to be used as template
                          for this volume. Make sure the image selected is compatible
                          with the datacenter''s location. Note: when creating a volume
                          - set image, image alias, or licence type.'
                        type: string
                      imageAlias:
                        description: 'Image Alias to be used for this volume. Note:
                          when creating a volume - set image, image alias, or licence
                          type.'
                        type: string
                      imagePassword:
                        description: Initial password to be set for installed OS.
                          Works with public images only. Not modifiable, forbidden
                          in update requests. Password rules allows all characters
                          from a-z, A-Z, 0-9.
                        type: string
                      licenceType:
                        description: 'OS type for this volume. Note: when creating
                          a volume - set image, image alias, or licence type.'
                        enum:
                        - UNKNOWN
                        - WINDOWS
                        - WINDOWS2016
                        - WINDOWS2022
                        - LINUX
                        - OTHER
                        type: string
                      name:
                        description: The name of the DAS Volume.
                        type: string
                      nicHotPlug:
                        description: Hot-plug capable NIC (no reboot required).
                        type: boolean
                      nicHotUnplug:
                        description: Hot-unplug capable NIC (no reboot required).
                        type: boolean
                      ramHotPlug:
                        description: Hot-plug capable RAM (no reboot required).
                        type: boolean
                      sshKeys:
                        description: Public SSH keys are set on the image as authorized
                          keys for appropriate SSH login to the instance using the
                          corresponding private key. This field may only be set in
                          creation requests. When reading, it always returns null.
                          SSH keys are only supported if a public Linux image is used
                          for the volume creation.
                        items:
                          type: string
                        type: array
                      userData:
                        description: The cloud-init configuration for the volume as
                          base64 encoded string. The property is immutable and is
                          only allowed to be set on creation of a new a volume. It
                          is mandatory to provide either 'public image' or 'imageAlias'
                          that has cloud-init compatibility in conjunction with this
                          property.
                        type: string
                    required:
                    - bus
                    - name
                    type: object
                required:
                - datacenterConfig
                - template
                - volume
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ServerStatus represents the observed state of a Server.
            properties:
              atProvider:
                description: ServerObservation are the observable fields of a Server.
                properties:
                  cpuFamily:
                    type: string
                  serverId:
                    type: string
                  state:
                    type: string
                  volumeId:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - managementPolicies
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
