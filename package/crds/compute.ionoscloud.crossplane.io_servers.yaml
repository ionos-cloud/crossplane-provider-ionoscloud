apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: servers.compute.ionoscloud.crossplane.io
spec:
  group: compute.ionoscloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - ionoscloud
    kind: Server
    listKind: ServerList
    plural: servers
    singular: server
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.datacenterConfig.datacenterId
      name: DATACENTER ID
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: SERVER ID
      type: string
    - jsonPath: .spec.forProvider.name
      name: SERVER NAME
      priority: 1
      type: string
    - jsonPath: .status.atProvider.volumeId
      name: BOOT VOLUME ID
      priority: 1
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Server is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ServerSpec defines the desired state of a Server.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'ServerParameters are the observable fields of a Server.
                  Required values when creating a Server: Datacenter ID or Reference,
                  Cores, RAM.'
                properties:
                  availabilityZone:
                    default: AUTO
                    description: The availability zone in which the server should
                      be provisioned.
                    enum:
                    - AUTO
                    - ZONE_1
                    - ZONE_2
                    type: string
                  bootCdromId:
                    type: string
                  cores:
                    description: The total number of cores for the server.
                    format: int32
                    type: integer
                  cpuFamily:
                    description: CPU architecture on which server gets provisioned;
                      not all CPU architectures are available in all datacenter regions;
                      available CPU architectures can be retrieved from the datacenter
                      resource.
                    enum:
                    - AMD_OPTERON
                    - INTEL_SKYLAKE
                    - INTEL_XEON
                    type: string
                  datacenterConfig:
                    description: DatacenterConfig contains information about the datacenter
                      resource on which the server will be created
                    properties:
                      datacenterId:
                        description: DatacenterID is the ID of the Datacenter on which
                          the resource will be created. It needs to be provided via
                          directly or via reference.
                        format: uuid
                        type: string
                      datacenterIdRef:
                        description: DatacenterIDRef references to a Datacenter to
                          retrieve its ID
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                        required:
                        - name
                        type: object
                      datacenterIdSelector:
                        description: DatacenterIDSelector selects reference to a Datacenter
                          to retrieve its datacenterId
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with
                              the same controller reference as the selecting object
                              is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                        type: object
                    type: object
                  name:
                    description: The name of the  resource.
                    type: string
                  ram:
                    description: The memory size for the server in MB, such as 2048.
                      Size must be specified in multiples of 256 MB with a minimum
                      of 256 MB. however, if you set ramHotPlug to TRUE then you must
                      use a minimum of 1024 MB. If you set the RAM size more than
                      240GB, then ramHotPlug will be set to FALSE and can not be set
                      to TRUE unless RAM size not set to less than 240GB.
                    format: int32
                    multipleOf: 256
                    type: integer
                  volumeConfig:
                    description: "In order to attach a volume to the server, it is
                      recommended to use VolumeConfig to set the existing volume (via
                      id or via reference). To detach a volume from the server, update
                      the CR spec by removing it. \n VolumeConfig contains information
                      about the existing volume resource which will be attached to
                      the server and set as bootVolume"
                    properties:
                      volumeId:
                        description: VolumeID is the ID of the Volume. It needs to
                          be provided via directly or via reference.
                        format: uuid
                        type: string
                      volumeIdRef:
                        description: VolumeIDRef references to a Volume to retrieve
                          its ID
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                        required:
                        - name
                        type: object
                      volumeIdSelector:
                        description: VolumeIDSelector selects reference to a Volume
                          to retrieve its volumeId
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with
                              the same controller reference as the selecting object
                              is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                        type: object
                    type: object
                required:
                - cores
                - datacenterConfig
                - ram
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ServerStatus represents the observed state of a Server.
            properties:
              atProvider:
                description: ServerObservation are the observable fields of a Server.
                properties:
                  cpuFamily:
                    type: string
                  serverId:
                    type: string
                  state:
                    type: string
                  volumeId:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
