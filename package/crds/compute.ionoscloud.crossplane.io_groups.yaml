---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: groups.compute.ionoscloud.crossplane.io
spec:
  group: compute.ionoscloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - ionoscloud
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: ID
      type: string
    - jsonPath: .spec.forProvider.name
      name: NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Group is the Schema for the Group resource API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A GroupSpec defines the desired state of a Group.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: |-
                  GroupParameters are the observable fields of a Group.
                  Required values when creating a Group:
                  Name
                properties:
                  accessActivityLog:
                    default: false
                    description: AccessActivityLog privilege for a group to access
                      activity logs.
                    type: boolean
                  accessAndManageCertificates:
                    default: false
                    description: AccessAndManageCertificates privilege for a group
                      to access and manage certificates.
                    type: boolean
                  accessAndManageDns:
                    default: false
                    description: AccessAndManageDNS privilege for a group to access
                      and manage dns records.
                    type: boolean
                  accessAndManageMonitoring:
                    default: false
                    description: AccessAndManageMonitoring privilege for a group to
                      access and manage monitoring related functionality
                    type: boolean
                  createBackupUnit:
                    default: false
                    description: CreateBackupUnit privilege to create backup unit
                      resource
                    type: boolean
                  createDataCenter:
                    default: false
                    description: CreateDataCenter privilege to create datacenter resource
                    type: boolean
                  createFlowLog:
                    default: false
                    description: CreateFlowLog privilege to create flow log resource
                    type: boolean
                  createInternetAccess:
                    default: false
                    description: CreateInternetAccess privilege to create internet
                      access
                    type: boolean
                  createK8sCluster:
                    default: false
                    description: CreateK8sCluster privilege to create kubernetes cluster
                    type: boolean
                  createPcc:
                    default: false
                    description: CreatePcc privilege to create private cross connect
                    type: boolean
                  createSnapshot:
                    default: false
                    description: CreateSnapshot privilege to create snapshot
                    type: boolean
                  manageDBaaS:
                    default: false
                    description: ManageDBaaS privilege to manage DBaaS related functionality
                    type: boolean
                  manageDataplatform:
                    default: false
                    description: ManageDataPlatform privilege to access and manage
                      the Data Platform
                    type: boolean
                  manageRegistry:
                    default: false
                    description: ManageRegistry privilege to access container registry
                      related functionality
                    type: boolean
                  name:
                    description: Name of the resource.
                    type: string
                  reserveIp:
                    default: false
                    description: ReserveIp privilege to reserve ip block
                    type: boolean
                  s3Privilege:
                    default: false
                    description: S3Privilege privilege to access S3 functionality
                    type: boolean
                  sharedResourcesConfig:
                    description: |-
                      SharedResources allows sharing privilege to resources between the members of the group
                      In order to share a resource within a group, it must be referenced either by providing its ID directly
                      or by specifying a set of values by which its K8s object can be identified
                    items:
                      description: ResourceShareConfig is used for referencing a resource
                        to be added as a ResourceShare within a Group
                      properties:
                        kind:
                          description: Kind of the Custom Resource
                          type: string
                        name:
                          description: |-
                            If ResourceID is not provided directly, the resource can be referenced through other attributes
                            These attributes mut all be provided for the Resource to be resolved successfully
                            Name of the kubernetes object instance of the Custom Resource
                          type: string
                        resourceShare:
                          description: ResourceShare
                          properties:
                            editPrivilege:
                              default: false
                              description: EditPrivilege for the Resource
                              type: boolean
                            resourceId:
                              description: |-
                                ResourceID is the ID of the Resource to which Group members gain privileges
                                It can only be provided directly
                              format: uuid
                              type: string
                            sharePrivilege:
                              default: false
                              description: SharePrivilege for the Resource
                              type: boolean
                          type: object
                        version:
                          description: Version of the Custom Resource
                          type: string
                      type: object
                    type: array
                  userConfig:
                    description: |-
                      In order to add a User as member to the Group, it is recommended to use UserCfg
                      to add an existing User as a member (via id or via reference).
                      To remove a User from the Group, update the CR spec by removing it.

                      UserCfg contains information about an existing User resource
                      which will be added to the Group
                    items:
                      description: UserConfig is used by resources that need to link
                        Users via id or via reference.
                      properties:
                        userId:
                          description: |-
                            UserID is the ID of the User on which the resource should have access.
                            It needs to be provided directly or via reference.
                          format: uuid
                          type: string
                        userIdRef:
                          description: UserIDRef references to a User to retrieve
                            its ID.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userIdSelector:
                          description: UserIDSelector selects reference to a User
                            to retrieve its UserID.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                required:
                - name
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A GroupStatus represents the observed state of a Group.
            properties:
              atProvider:
                description: GroupObservation are the observable fields of a Group.
                properties:
                  groupId:
                    description: GroupID is the group id
                    type: string
                  resourceShare:
                    description: ResourceShares of this Group
                    items:
                      description: ResourceShare can be added to a Group to grant
                        privileges to its members on the resource referenced by ResourceID
                      properties:
                        editPrivilege:
                          default: false
                          description: EditPrivilege for the Resource
                          type: boolean
                        resourceId:
                          description: |-
                            ResourceID is the ID of the Resource to which Group members gain privileges
                            It can only be provided directly
                          format: uuid
                          type: string
                        sharePrivilege:
                          default: false
                          description: SharePrivilege for the Resource
                          type: boolean
                      type: object
                    type: array
                  userIDs:
                    description: UserIDs of the members of this Group
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
