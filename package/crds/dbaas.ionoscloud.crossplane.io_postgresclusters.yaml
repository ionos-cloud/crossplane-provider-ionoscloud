---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: postgresclusters.dbaas.ionoscloud.crossplane.io
spec:
  group: dbaas.ionoscloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - ionoscloud
    kind: PostgresCluster
    listKind: PostgresClusterList
    plural: postgresclusters
    singular: postgrescluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: CLUSTER ID
      type: string
    - jsonPath: .spec.forProvider.displayName
      name: CLUSTER NAME
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.connections[0].datacenterConfig.datacenterId
      name: DATACENTER ID
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.connections[0].lanConfig.lanId
      name: LAN ID
      priority: 1
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A PostgresCluster is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          managementPolicies:
            description: ManagementPolicies determine how should Crossplane controllers
              manage an external resource through an array of ManagementActions.
            items:
              description: A ManagementAction represents an action that the Crossplane
                controllers can take on an external resource.
              enum:
              - Observe
              - Create
              - Update
              - Delete
              - LateInitialize
              - '*'
              type: string
            type: array
          metadata:
            type: object
          spec:
            description: A ClusterSpec defines the desired state of a Cluster.
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'ClusterParameters are the observable fields of a Cluster.
                  Required fields in order to create a DBaaS Postgres Cluster: PostgresVersion,
                  Instances, Cores, RAM, Storage Size, Storage Type, Connection (Datacenter
                  ID or Reference, Lan ID and CIDR), Location (in sync with Datacenter),
                  DisplayName, Credentials, Synchronization Mode.'
                properties:
                  backupLocation:
                    description: The S3 location where the backups will be stored.
                    enum:
                    - de
                    - eu-south-2
                    - eu-central-2
                    type: string
                  connections:
                    description: Connection - details about the network connection
                      (datacenter, lan, CIDR) for your cluster.
                    items:
                      description: Connection Details about the network connection
                        for your cluster.
                      properties:
                        cidr:
                          description: 'The IP and subnet for your cluster. Note:
                            the following IP ranges are unavailable: 10.233.64.0/18
                            10.233.0.0/18 10.233.114.0/24.'
                          type: string
                        datacenterConfig:
                          description: DatacenterConfig contains information about
                            the datacenter resource.
                          properties:
                            datacenterId:
                              description: DatacenterID is the ID of the Datacenter
                                on which the resource will be created. It needs to
                                be provided via directly or via reference.
                              format: uuid
                              type: string
                            datacenterIdRef:
                              description: DatacenterIDRef references to a Datacenter
                                to retrieve its ID.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution
                                        of this reference is required. The default
                                        is 'Required', which means the reconcile will
                                        fail if the reference cannot be resolved.
                                        'Optional' means this reference will be a
                                        no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference
                                        should be resolved. The default is 'IfNotPresent',
                                        which will attempt to resolve the reference
                                        only when the corresponding field is not present.
                                        Use 'Always' to resolve the reference on every
                                        reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            datacenterIdSelector:
                              description: DatacenterIDSelector selects reference
                                to a Datacenter to retrieve its DatacenterID.
                              properties:
                                matchControllerRef:
                                  description: MatchControllerRef ensures an object
                                    with the same controller reference as the selecting
                                    object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution
                                        of this reference is required. The default
                                        is 'Required', which means the reconcile will
                                        fail if the reference cannot be resolved.
                                        'Optional' means this reference will be a
                                        no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference
                                        should be resolved. The default is 'IfNotPresent',
                                        which will attempt to resolve the reference
                                        only when the corresponding field is not present.
                                        Use 'Always' to resolve the reference on every
                                        reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        lanConfig:
                          description: LanConfig contains information about the lan
                            resource.
                          properties:
                            lanId:
                              description: LanID is the ID of the Lan on which the
                                cluster will connect to. It needs to be provided via
                                directly or via reference.
                              type: string
                            lanIdRef:
                              description: LanIDRef references to a Lan to retrieve
                                its ID.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution
                                        of this reference is required. The default
                                        is 'Required', which means the reconcile will
                                        fail if the reference cannot be resolved.
                                        'Optional' means this reference will be a
                                        no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference
                                        should be resolved. The default is 'IfNotPresent',
                                        which will attempt to resolve the reference
                                        only when the corresponding field is not present.
                                        Use 'Always' to resolve the reference on every
                                        reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            lanIdSelector:
                              description: LanIDSelector selects reference to a Lan
                                to retrieve its LanID.
                              properties:
                                matchControllerRef:
                                  description: MatchControllerRef ensures an object
                                    with the same controller reference as the selecting
                                    object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution
                                        of this reference is required. The default
                                        is 'Required', which means the reconcile will
                                        fail if the reference cannot be resolved.
                                        'Optional' means this reference will be a
                                        no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference
                                        should be resolved. The default is 'IfNotPresent',
                                        which will attempt to resolve the reference
                                        only when the corresponding field is not present.
                                        Use 'Always' to resolve the reference on every
                                        reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                      required:
                      - cidr
                      - datacenterConfig
                      - lanConfig
                      type: object
                    maxItems: 1
                    minItems: 1
                    type: array
                  cores:
                    description: The number of CPU cores per instance.
                    format: int32
                    type: integer
                  credentials:
                    description: Database credentials - either set directly, or as
                      secret/path/env
                    properties:
                      env:
                        description: Env is a reference to an environment variable
                          that contains credentials that must be used to connect to
                          the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: Fs is a reference to a filesystem location that
                          contains credentials that must be used to connect to the
                          provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      password:
                        type: string
                      secretRef:
                        description: A SecretRef is a reference to a secret key that
                          contains the credentials that must be used to connect to
                          the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the provider credentials.
                        enum:
                        - None
                        - Secret
                        - InjectedIdentity
                        - Environment
                        - Filesystem
                        type: string
                      username:
                        description: The username for the postgres user. Some system
                          usernames are restricted (e.g. \"postgres\", \"admin\",
                          \"standby\"). Password must have a minimum length o 10
                        type: string
                    type: object
                  displayName:
                    description: The friendly name of your cluster.
                    type: string
                  fromBackup:
                    description: CreateRestoreRequest The restore request.
                    properties:
                      backupId:
                        description: The unique ID of the backup you want to restore.
                        type: string
                      recoveryTargetTime:
                        description: If this value is supplied as ISO 8601 timestamp,
                          the backup will be replayed up until the given timestamp.
                          If empty, the backup will be applied completely.
                        type: string
                    required:
                    - backupId
                    type: object
                  instances:
                    description: The total number of instances in the cluster (one
                      master and n-1 standbys).
                    format: int32
                    type: integer
                  location:
                    description: 'Location The physical location where the cluster
                      will be created. This will be where all of your instances live.
                      Property cannot be modified after datacenter creation. Location
                      can have the following values: de/fra, us/las, us/ewr, de/txl,
                      gb/lhr, es/vit.'
                    type: string
                  maintenanceWindow:
                    description: MaintenanceWindow A weekly 4 hour-long window, during
                      which maintenance might occur.
                    properties:
                      dayOfTheWeek:
                        description: DayOfTheWeek The name of the week day.
                        type: string
                      time:
                        type: string
                    type: object
                  postgresVersion:
                    description: The PostgreSQL version of your cluster.
                    type: string
                  ram:
                    description: The amount of memory per instance in megabytes. Has
                      to be a multiple of 1024.
                    format: int32
                    multipleOf: 1024
                    type: integer
                  storageSize:
                    description: The amount of storage per instance in megabytes.
                    format: int32
                    type: integer
                  storageType:
                    description: The storage type used in your cluster. Value "SSD"
                      is deprecated. Use the equivalent "SSD Premium" instead.
                    enum:
                    - HDD
                    - SSD
                    - SSD Standard
                    - SSD Premium
                    type: string
                  synchronizationMode:
                    description: SynchronizationMode Represents different modes of
                      replication.
                    enum:
                    - ASYNCHRONOUS
                    - STRICTLY_SYNCHRONOUS
                    - SYNCHRONOUS
                    type: string
                required:
                - connections
                - cores
                - credentials
                - displayName
                - instances
                - location
                - postgresVersion
                - ram
                - storageSize
                - storageType
                - synchronizationMode
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ClusterStatus represents the observed state of a Cluster.
            properties:
              atProvider:
                description: ClusterObservation are the observable fields of a Cluster.
                properties:
                  clusterId:
                    type: string
                  state:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - managementPolicies
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
