---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: statefulserversets.compute.ionoscloud.crossplane.io
spec:
  group: compute.ionoscloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - ionoscloud
    kind: StatefulServerSet
    listKind: StatefulServerSetList
    plural: statefulserversets
    singular: statefulserverset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A StatefulServerSet is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A StatefulServerSetSpec defines the desired state of a StatefulServerSet.
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: StatefulServerSetParameters are the configurable fields
                  of a StatefulServerSet.
                properties:
                  datacenterConfig:
                    description: DatacenterConfig contains information about the datacenter
                      resource on which the server will be created.
                    properties:
                      datacenterId:
                        description: DatacenterID is the ID of the Datacenter on which
                          the resource will be created. It needs to be provided via
                          directly or via reference.
                        format: uuid
                        type: string
                      datacenterIdRef:
                        description: DatacenterIDRef references to a Datacenter to
                          retrieve its ID.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution
                                  of this reference is required. The default is 'Required',
                                  which means the reconcile will fail if the reference
                                  cannot be resolved. 'Optional' means this reference
                                  will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference
                                  should be resolved. The default is 'IfNotPresent',
                                  which will attempt to resolve the reference only
                                  when the corresponding field is not present. Use
                                  'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      datacenterIdSelector:
                        description: DatacenterIDSelector selects reference to a Datacenter
                          to retrieve its DatacenterID.
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with
                              the same controller reference as the selecting object
                              is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution
                                  of this reference is required. The default is 'Required',
                                  which means the reconcile will fail if the reference
                                  cannot be resolved. 'Optional' means this reference
                                  will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference
                                  should be resolved. The default is 'IfNotPresent',
                                  which will attempt to resolve the reference only
                                  when the corresponding field is not present. Use
                                  'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                  deploymentStrategy:
                    properties:
                      type:
                        enum:
                        - ZONES
                        type: string
                    required:
                    - type
                    type: object
                  lans:
                    items:
                      properties:
                        metadata:
                          description: StatefulServerSetLanMetadata are the configurable
                            fields of a StatefulServerSetLanMetadata.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        spec:
                          properties:
                            dhcp:
                              type: boolean
                            ipv6:
                              type: boolean
                          type: object
                      required:
                      - metadata
                      - spec
                      type: object
                    type: array
                  replicas:
                    description: The number of servers that will be created.
                    minimum: 1
                    type: integer
                  template:
                    description: StatefulServerSetTemplate are the configurable fields
                      of a StatefulServerSetTemplate.
                    properties:
                      metadata:
                        description: StatefulServerSetMetadata are the configurable
                          fields of a StatefulServerSetMetadata.
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                          name:
                            type: string
                        required:
                        - name
                        type: object
                      spec:
                        description: StatefulServerSetTemplateSpec are the configurable
                          fields of a StatefulServerSetTemplateSpec.
                        properties:
                          bootStorageVolume:
                            description: The reference to the boot volume. It must
                              exist in the same data center as the server.
                            type: string
                          cores:
                            description: The total number of cores for the server.
                            format: int32
                            type: integer
                          cpuFamily:
                            description: CPU architecture on which server gets provisioned;
                              not all CPU architectures are available in all datacenter
                              regions; available CPU architectures can be retrieved
                              from the datacenter resource.
                            enum:
                            - AMD_OPTERON
                            - INTEL_SKYLAKE
                            - INTEL_XEON
                            type: string
                          nics:
                            description: NICs are the network interfaces of the server.
                            items:
                              properties:
                                lanReferenceName:
                                  type: string
                                vnetId:
                                  description: This references the LAN from the client.
                                  type: string
                              required:
                              - lanReferenceName
                              type: object
                            minItems: 1
                            type: array
                          ram:
                            description: The memory size for the server in MB, such
                              as 2048. Size must be specified in multiples of 256
                              MB with a minimum of 256 MB.
                            format: int32
                            multipleOf: 256
                            type: integer
                          volumeMounts:
                            description: The reference to the other volumes. They
                              must exist in the same data center as the server.
                            items:
                              description: StatefulServerSetTemplateSpecVolumeMounts
                                are the configurable fields of a StatefulServerSetTemplateSpecVolumeMounts.
                                It is used to mount a volume to a server.
                              properties:
                                referenceName:
                                  type: string
                              required:
                              - referenceName
                              type: object
                            type: array
                        required:
                        - bootStorageVolume
                        - cores
                        - ram
                        type: object
                    required:
                    - metadata
                    - spec
                    type: object
                  volumes:
                    items:
                      properties:
                        metadata:
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        spec:
                          properties:
                            image:
                              description: The public image UUID or a public image
                                alias.
                              type: string
                            size:
                              description: The size of the volume in GB.
                              type: number
                            type:
                              description: Hardware type of the volume.
                              enum:
                              - HDD
                              - SSD
                              - SSD Standard
                              - SSD Premium
                              type: string
                            userData:
                              description: The cloud init configuration in base64
                                encoding.
                              type: string
                          required:
                          - size
                          - type
                          type: object
                      required:
                      - metadata
                      - spec
                      type: object
                    type: array
                required:
                - datacenterConfig
                - deploymentStrategy
                - lans
                - replicas
                - template
                - volumes
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: 'TODO: Not sure if the StatefulServerSetStatus should look
              like this'
            properties:
              atProvider:
                description: StatefulServerSetObservation are the observable fields
                  of a StatefulServerSet.
                properties:
                  replicaStatus:
                    items:
                      properties:
                        errorMessage:
                          description: ErrorMessage relayed from the backend.
                          type: string
                        lastModified:
                          format: date-time
                          type: string
                        name:
                          type: string
                        role:
                          description: Server assigned role
                          enum:
                          - ACTIVE
                          - PASSIVE
                          - REPLICA
                          type: string
                        status:
                          enum:
                          - UNKNOWN
                          - READY
                          - ERROR
                          type: string
                      required:
                      - name
                      - role
                      - status
                      type: object
                    type: array
                  replicas:
                    description: Replicas is the count of ready replicas.
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
