---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: statefulserversets.compute.ionoscloud.crossplane.io
spec:
  group: compute.ionoscloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - ionoscloud
    kind: StatefulServerSet
    listKind: StatefulServerSetList
    plural: statefulserversets
    shortNames:
    - sss
    - ssset
    singular: statefulserverset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.datacenterConfig.datacenterId
      name: Datacenter ID
      type: string
    - jsonPath: .status.atProvider.replicas
      name: REPLICAS
      type: integer
    - jsonPath: .status.atProvider.replicaStatuses
      name: servers
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          A StatefulServerSet is a an API type that represents a set of servers with data Volumes attached in the Ionos Cloud. The number of resources created is defined by the replicas field.
          This includes the servers, boot volume, data volumes NICs and LANs configured in the template. It will also create a volumeselector which attaches data Volumes to the servers.
          Unlike a K8s StatefulSet, a StatefulServerSet does not keep the data Volumes in sync. The information on the active replica is `NOT` propagated to the passives.
          Each sub-resource created(server, bootvolume, datavolume, nic) will have it's own CR that can be observed using kubectl.
          The SSSet reads the active(master) identity from a configMap that needs to be named `config-lease`. If the configMap is not found, the master will be the first server created.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A StatefulServerSetSpec defines the desired state of a StatefulServerSet.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: StatefulServerSetParameters are the configurable fields
                  of a StatefulServerSet.
                properties:
                  bootVolumeTemplate:
                    description: BootVolumeTemplate are the configurable fields of
                      a BootVolumeTemplate.
                    properties:
                      metadata:
                        description: ServerSetBootVolumeMetadata are the configurable
                          fields of a ServerSetBootVolumeMetadata.
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                          name:
                            description: |-
                              Name of the BootVolume. Replica index, volume index, and version are appended to the name.
                              Resulting name will be in format: {name}-{replicaIndex}-{version}.
                              Version increases if the bootvolume is re-created due to an immutable field changing. E.g. if the image or the disk type are changed, the bootvolume is re-created and the version is increased.
                            maxLength: 55
                            pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                            type: string
                        required:
                        - name
                        type: object
                      spec:
                        description: ServerSetBootVolumeSpec are the configurable
                          fields of a ServerSetBootVolumeSpec.
                        properties:
                          image:
                            description: |-
                              Image or snapshot ID to be used as template for this volume.
                              Make sure the image selected is compatible with the datacenter's location.
                              Note: when creating a volume and setting image, set imagePassword or SSKeys as well.
                            type: string
                          imagePassword:
                            description: |-
                              Initial password to be set for installed OS. Works with public images only. Not modifiable, forbidden in update requests.
                              Password rules allows all characters from a-z, A-Z, 0-9.
                            maxLength: 50
                            minLength: 8
                            pattern: ^[A-Za-z0-9]+$
                            type: string
                          selector:
                            description: |-
                              A label selector is a label query over a set of resources. The result of matchLabels and
                              matchExpressions are ANDed. An empty label selector matches all objects. A null
                              label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          setHotPlugsFromImage:
                            default: false
                            description: |-
                              SetHotPlugsFromImage enables or disables pulling hot plug settings (currently only CPU and RAM) from the image.
                              If not specified, the default value is false.
                              Is incompatible with other hot plug settings - if set to true, it will ignore any other hot plug settings.
                              Changing this value requires the boot volume to be re-created.
                            type: boolean
                          size:
                            description: The size of the volume in GB.
                            type: number
                            x-kubernetes-validations:
                            - message: Size cannot be decreased once set, only increased
                              rule: self >= oldSelf
                          sshKeys:
                            description: |-
                              Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key.
                              This field may only be set in creation requests. When reading, it always returns null.
                              SSH keys are only supported if a public Linux image is used for the volume creation.
                            items:
                              type: string
                            type: array
                          substitutions:
                            description: |-
                              Substitutions are used to replace placeholders in the cloud-init configuration.
                              The property is immutable and is only allowed to be set on creation of a new a volume.
                            items:
                              description: |-
                                Substitution defines the substitution configuration. Can be used to replace a key in the cloud-init userdata field with a value computed by a handler
                                given in the options field.
                                Example:
                                substitutions:
                                  - type: ipv4Address
                                    key: $keyToReplace
                                    unique: true
                                    options:
                                    cidr: "10.0.0.0/24"
                              properties:
                                key:
                                  description: The key that will be replaced by the
                                    value computed by the handler
                                  type: string
                                options:
                                  additionalProperties:
                                    type: string
                                  description: The options for the handler. For example,
                                    for ipv4Address and ipv6Address handlers, we need
                                    to specify cidr as an option
                                  type: object
                                type:
                                  description: |-
                                    The type of the handler that will be used for this substitution. The handler will
                                    be responsible for computing the value we put in place of te key
                                  enum:
                                  - ipv4Address
                                  - ipv6Address
                                  type: string
                                unique:
                                  description: The value is unique across multiple
                                    ServerSets
                                  type: boolean
                              required:
                              - key
                              - options
                              - type
                              - unique
                              type: object
                            type: array
                          type:
                            description: Changing type re-creates either the bootvolume,
                              or the bootvolume, server and nic depending on the UpdateStrategy
                              chosen`
                            enum:
                            - HDD
                            - SSD
                            - SSD Standard
                            - SSD Premium
                            - DAS
                            - ISO
                            type: string
                          updateStrategy:
                            description: UpdateStrategy is the update strategy for
                              the boot volume.
                            properties:
                              type:
                                default: createBeforeDestroyBootVolume
                                description: UpdateStrategyType is the type of the
                                  update strategy for the boot volume.
                                enum:
                                - createAllBeforeDestroy
                                - createBeforeDestroyBootVolume
                                type: string
                            required:
                            - type
                            type: object
                          userData:
                            description: |-
                              The cloud-init configuration for the volume as base64 encoded string.
                              The property is immutable and is only allowed to be set on creation of a new a volume.
                              It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property.
                              Hostname is injected automatically in the userdata, in the format: {bootvolumeNameFromMetadata}-{replicaIndex}-{version}
                              PCI slots of the nics attached to the server are injected automatically in the userdata, with the key : {nic_pcislot}_{nicNameFromMetadata with - replaced by _} and the value : {pciSlot}
                            type: string
                        required:
                        - image
                        - size
                        - type
                        - updateStrategy
                        type: object
                    required:
                    - spec
                    type: object
                  datacenterConfig:
                    description: |-
                      DatacenterConfig contains information about the datacenter resource
                      on which the server will be created.
                    properties:
                      datacenterId:
                        description: |-
                          DatacenterID is the ID of the Datacenter on which the resource will be created.
                          It needs to be provided via directly or via reference.
                        format: uuid
                        type: string
                      datacenterIdRef:
                        description: DatacenterIDRef references to a Datacenter to
                          retrieve its ID.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      datacenterIdSelector:
                        description: DatacenterIDSelector selects reference to a Datacenter
                          to retrieve its DatacenterID.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                  deploymentStrategy:
                    description: DeploymentStrategy describes what strategy should
                      be used to deploy the servers.
                    properties:
                      type:
                        enum:
                        - ZONES
                        type: string
                    required:
                    - type
                    type: object
                  identityConfigMap:
                    description: |-
                      IdentityConfigMap is the configMap from which the identity of the ACTIVE server in the ServerSet is read. The configMap
                      should be created separately. The stateful serverset only reads the status from it. If it does not find it, it sets
                      the first server as the ACTIVE.
                    properties:
                      keyName:
                        description: KeyName the key name in the configMap from which
                          the identity of the ACTIVE server in the ServerSet is read.
                        type: string
                      name:
                        description: Name of the configMap from which the identity
                          of the ACTIVE server in the ServerSet is read.
                        type: string
                      namespace:
                        description: Namespace of the configMap from which the identity
                          of the ACTIVE server in the ServerSet is read.
                        type: string
                    type: object
                  lans:
                    items:
                      description: StatefulServerSetLan are the configurable fields
                        of a StatefulServerSetLan.
                      properties:
                        metadata:
                          description: StatefulServerSetLanMetadata are the configurable
                            fields of a StatefulServerSetLanMetadata.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              description: 'Name from which the LAN name will be generated.
                                Index will be appended. Resulting name will be in
                                format: {name}-{replicaIndex}'
                              maxLength: 55
                              pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                              type: string
                          required:
                          - name
                          type: object
                        spec:
                          description: StatefulServerSetLanSpec are the configurable
                            fields of a StatefulServerSetLanSpec.
                          properties:
                            ipv6cidr:
                              type: string
                            public:
                              type: boolean
                          type: object
                      required:
                      - metadata
                      - spec
                      type: object
                    type: array
                  removePendingOnReboot:
                    default: false
                    description: |-
                      RemovePendingOnReboot indicates whether the create-pending annotation should be removed after a crossplane reboot.
                      This is useful to continue creation of the statefulserverset if the provider is rebooted while the statefulServerSet is being created.
                      Use this in conjunction the global `uniqueNames` field to avoid leaking resources.
                    type: boolean
                  replicas:
                    description: The number of servers that will be created. Cannot
                      be decreased once set, only increased. Has a minimum of 1.
                    minimum: 1
                    type: integer
                    x-kubernetes-validations:
                    - message: Replicas can only be increased
                      rule: self >= oldSelf
                  template:
                    description: ServerSetTemplate are the configurable fields of
                      a ServerSetTemplate.
                    properties:
                      metadata:
                        description: ServerSetMetadata are the configurable fields
                          of a ServerSetMetadata.
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                          name:
                            description: |-
                              Name of the Server. Replica index and version are appended to the name. Resulting name will be in format: {name}-{replicaIndex}-{version}
                              Version increases if the Server is re-created due to an immutable field changing. E.g. if the bootvolume type or image are changed and the strategy is createAllBeforeDestroy, the Server is re-created and the version is increased.
                            maxLength: 55
                            pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                            type: string
                        required:
                        - name
                        type: object
                      spec:
                        description: ServerSetTemplateSpec are the configurable fields
                          of a ServerSetTemplateSpec.
                        properties:
                          cores:
                            description: The total number of cores for the server.
                            format: int32
                            type: integer
                          cpuFamily:
                            description: |-
                              CPU architecture on which server gets provisioned; not all CPU architectures are available in all datacenter regions;
                              available CPU architectures can be retrieved from the datacenter resource.
                            type: string
                          nicMultiQueue:
                            description: Activate or deactivate the Multi Queue feature
                              on all NICs of this server.
                            type: boolean
                          nics:
                            description: NICs are the network interfaces of the server.
                            items:
                              description: ServerSetTemplateNIC are the configurable
                                fields of a ServerSetTemplateNIC.
                              properties:
                                dhcp:
                                  type: boolean
                                dhcpv6:
                                  type: boolean
                                firewallActive:
                                  default: false
                                  type: boolean
                                firewallRules:
                                  items:
                                    properties:
                                      icmpCode:
                                        description: Defines the allowed code (from
                                          0 to 254) if protocol ICMP is chosen. Value
                                          null allows all codes.
                                        format: int32
                                        maximum: 254
                                        minimum: 0
                                        type: integer
                                      icmpType:
                                        description: Defines the allowed type (from
                                          0 to 254) if the protocol ICMP is chosen.
                                          Value null allows all types.
                                        format: int32
                                        maximum: 254
                                        minimum: 0
                                        type: integer
                                      name:
                                        description: The name of the  resource.
                                        type: string
                                      portRangeEnd:
                                        description: |-
                                          Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen.
                                          Leave portRangeStart and portRangeEnd null to allow all ports.
                                        format: int32
                                        maximum: 65534
                                        minimum: 1
                                        type: integer
                                      portRangeStart:
                                        description: |-
                                          Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen.
                                          Leave portRangeStart and portRangeEnd value null to allow all ports.
                                        format: int32
                                        maximum: 65534
                                        minimum: 1
                                        type: integer
                                      protocol:
                                        description: The protocol for the rule. Property
                                          cannot be modified after it is created (disallowed
                                          in update requests).
                                        enum:
                                        - TCP
                                        - UDP
                                        - ICMP
                                        - ANY
                                        type: string
                                      sourceIpConfig:
                                        description: |-
                                          Only traffic originating from the respective IPv4 address is allowed.
                                          Value null allows traffic from any IP address.
                                          SourceIP can be set directly or via reference to an IP Block and index.
                                        properties:
                                          ip:
                                            description: |-
                                              Use IP or CIDR to set specific IP or CIDR to the resource. If both IP and IPBlockConfig are set,
                                              only `ip` field will be considered.
                                            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))?$
                                            type: string
                                          ipBlockConfig:
                                            description: |-
                                              Use IpBlockConfig to reference existing IPBlock, and to mention the index for the IP.
                                              Index starts from 0 and it must be provided.
                                            properties:
                                              index:
                                                description: |-
                                                  Index is referring to the IP index retrieved from the IPBlock.
                                                  Index is starting from 0.
                                                type: integer
                                              ipBlockId:
                                                description: |-
                                                  IPBlockID is the ID of the IPBlock on which the resource will be created.
                                                  It needs to be provided via directly or via reference.
                                                format: uuid
                                                type: string
                                              ipBlockIdRef:
                                                description: IPBlockIDRef references
                                                  to a IPBlock to retrieve its ID.
                                                properties:
                                                  name:
                                                    description: Name of the referenced
                                                      object.
                                                    type: string
                                                  policy:
                                                    description: Policies for referencing.
                                                    properties:
                                                      resolution:
                                                        default: Required
                                                        description: |-
                                                          Resolution specifies whether resolution of this reference is required.
                                                          The default is 'Required', which means the reconcile will fail if the
                                                          reference cannot be resolved. 'Optional' means this reference will be
                                                          a no-op if it cannot be resolved.
                                                        enum:
                                                        - Required
                                                        - Optional
                                                        type: string
                                                      resolve:
                                                        description: |-
                                                          Resolve specifies when this reference should be resolved. The default
                                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                                          the corresponding field is not present. Use 'Always' to resolve the
                                                          reference on every reconcile.
                                                        enum:
                                                        - Always
                                                        - IfNotPresent
                                                        type: string
                                                    type: object
                                                required:
                                                - name
                                                type: object
                                              ipBlockIdSelector:
                                                description: IPBlockIDSelector selects
                                                  reference to a IPBlock to retrieve
                                                  its IPBlockID.
                                                properties:
                                                  matchControllerRef:
                                                    description: |-
                                                      MatchControllerRef ensures an object with the same controller reference
                                                      as the selecting object is selected.
                                                    type: boolean
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: MatchLabels ensures
                                                      an object with matching labels
                                                      is selected.
                                                    type: object
                                                  policy:
                                                    description: Policies for selection.
                                                    properties:
                                                      resolution:
                                                        default: Required
                                                        description: |-
                                                          Resolution specifies whether resolution of this reference is required.
                                                          The default is 'Required', which means the reconcile will fail if the
                                                          reference cannot be resolved. 'Optional' means this reference will be
                                                          a no-op if it cannot be resolved.
                                                        enum:
                                                        - Required
                                                        - Optional
                                                        type: string
                                                      resolve:
                                                        description: |-
                                                          Resolve specifies when this reference should be resolved. The default
                                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                                          the corresponding field is not present. Use 'Always' to resolve the
                                                          reference on every reconcile.
                                                        enum:
                                                        - Always
                                                        - IfNotPresent
                                                        type: string
                                                    type: object
                                                type: object
                                            required:
                                            - index
                                            type: object
                                        type: object
                                      sourceMac:
                                        description: |-
                                          Only traffic originating from the respective MAC address is allowed.
                                          Valid format: aa:bb:cc:dd:ee:ff. Value null allows traffic from any MAC address.
                                        pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
                                        type: string
                                      targetIpConfig:
                                        description: |-
                                          If the target NIC has multiple IP addresses, only the traffic directed to the respective IP address of the NIC is allowed.
                                          Value null allows traffic to any target IP address.
                                          TargetIP can be set directly or via reference to an IP Block and index.
                                        properties:
                                          ip:
                                            description: |-
                                              Use IP or CIDR to set specific IP or CIDR to the resource. If both IP and IPBlockConfig are set,
                                              only `ip` field will be considered.
                                            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))?$
                                            type: string
                                          ipBlockConfig:
                                            description: |-
                                              Use IpBlockConfig to reference existing IPBlock, and to mention the index for the IP.
                                              Index starts from 0 and it must be provided.
                                            properties:
                                              index:
                                                description: |-
                                                  Index is referring to the IP index retrieved from the IPBlock.
                                                  Index is starting from 0.
                                                type: integer
                                              ipBlockId:
                                                description: |-
                                                  IPBlockID is the ID of the IPBlock on which the resource will be created.
                                                  It needs to be provided via directly or via reference.
                                                format: uuid
                                                type: string
                                              ipBlockIdRef:
                                                description: IPBlockIDRef references
                                                  to a IPBlock to retrieve its ID.
                                                properties:
                                                  name:
                                                    description: Name of the referenced
                                                      object.
                                                    type: string
                                                  policy:
                                                    description: Policies for referencing.
                                                    properties:
                                                      resolution:
                                                        default: Required
                                                        description: |-
                                                          Resolution specifies whether resolution of this reference is required.
                                                          The default is 'Required', which means the reconcile will fail if the
                                                          reference cannot be resolved. 'Optional' means this reference will be
                                                          a no-op if it cannot be resolved.
                                                        enum:
                                                        - Required
                                                        - Optional
                                                        type: string
                                                      resolve:
                                                        description: |-
                                                          Resolve specifies when this reference should be resolved. The default
                                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                                          the corresponding field is not present. Use 'Always' to resolve the
                                                          reference on every reconcile.
                                                        enum:
                                                        - Always
                                                        - IfNotPresent
                                                        type: string
                                                    type: object
                                                required:
                                                - name
                                                type: object
                                              ipBlockIdSelector:
                                                description: IPBlockIDSelector selects
                                                  reference to a IPBlock to retrieve
                                                  its IPBlockID.
                                                properties:
                                                  matchControllerRef:
                                                    description: |-
                                                      MatchControllerRef ensures an object with the same controller reference
                                                      as the selecting object is selected.
                                                    type: boolean
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: MatchLabels ensures
                                                      an object with matching labels
                                                      is selected.
                                                    type: object
                                                  policy:
                                                    description: Policies for selection.
                                                    properties:
                                                      resolution:
                                                        default: Required
                                                        description: |-
                                                          Resolution specifies whether resolution of this reference is required.
                                                          The default is 'Required', which means the reconcile will fail if the
                                                          reference cannot be resolved. 'Optional' means this reference will be
                                                          a no-op if it cannot be resolved.
                                                        enum:
                                                        - Required
                                                        - Optional
                                                        type: string
                                                      resolve:
                                                        description: |-
                                                          Resolve specifies when this reference should be resolved. The default
                                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                                          the corresponding field is not present. Use 'Always' to resolve the
                                                          reference on every reconcile.
                                                        enum:
                                                        - Always
                                                        - IfNotPresent
                                                        type: string
                                                    type: object
                                                type: object
                                            required:
                                            - index
                                            type: object
                                        type: object
                                      type:
                                        default: INGRESS
                                        description: The type of the firewall rule.
                                          If not specified, the default INGRESS value
                                          is used.
                                        enum:
                                        - INGRESS
                                        - EGRESS
                                        type: string
                                    required:
                                    - protocol
                                    type: object
                                  type: array
                                firewallType:
                                  default: INGRESS
                                  description: The type of firewall rules that will
                                    be allowed on the NIC. If not specified, the default
                                    INGRESS value is used.
                                  enum:
                                  - BIDIRECTIONAL
                                  - EGRESS
                                  - INGRESS
                                  type: string
                                lanReference:
                                  description: The Referenced LAN must be created
                                    before the ServerSet is applied
                                  type: string
                                name:
                                  description: |-
                                    Name of the NIC. Replica index, NIC index, and version are appended to the name. Resulting name will be in format: {name}-{replicaIndex}-{nicIndex}-{version}.
                                    Version increases if the NIC is re-created due to an immutable field changing. E.g. if the bootvolume type or image are changed and the strategy is createAllBeforeDestroy, the NIC is re-created and the version is increased.
                                  maxLength: 50
                                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                                  type: string
                                vnetId:
                                  type: string
                              required:
                              - dhcp
                              - lanReference
                              - name
                              type: object
                              x-kubernetes-validations:
                              - message: Only one of 'dhcp' or 'dhcpv6' can be set
                                  to true
                                rule: '!has(self.dhcpv6) || (self.dhcp == false &&
                                  self.dhcpv6 == false) || (self.dhcp != self.dhcpv6)'
                            minItems: 1
                            type: array
                          ram:
                            description: |-
                              The memory size for the server in MB, such as 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB.
                              however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB,
                              then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
                            format: int32
                            multipleOf: 1024
                            type: integer
                          stateMap:
                            description: |-
                              StateMap points to a user-created configMap to pull the running state of the server from. This is meant to be used
                              in scenarios where the state of the software running on the server is needed. We expect the software to report its state
                              in this configMap. This will work in conjunction with the API state and it can be seen as a logical AND between the API state and the software state.

                              There will be 2 entries expected for a server in the state map in order to consider the state valid:
                                   1. <key-prefix>-<server-name>-state : the state of the server (e.g. VM-RUNNING, VM-ERROR)
                                   2. <key-prefix>-<server-name>-timestamp : the timestamp of the last update of the state, only RFC3339 format is accepted (e.g. 2025-10-15T11:26:20+00:00)

                              Accepted states are: VM-RUNNING, VM-ERROR. Any other state will be considered as not ready.
                              If the configMap is not found or the key with the prefix is not found, the serverset will be considered not ready.
                              The timestamp is used to ensure that the server can update and failover correctly if the case requires it. A missing timestamp or one that does not
                              follow the RFC3339 format will cause the server to be considered not ready in the observation loop.
                              For an update, if the timestamp is not the appropriate format, it will error out.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                              prefix:
                                description: The keys in the configMap that correspond
                                  to the running state of the server will follow the
                                  format <prefix>-<server-name>-state and <prefix>-<server-name>-timestamp.
                                type: string
                            required:
                            - name
                            - namespace
                            - prefix
                            type: object
                        required:
                        - cores
                        - nics
                        - ram
                        type: object
                    required:
                    - metadata
                    - spec
                    type: object
                  volumes:
                    items:
                      description: StatefulServerSetVolume are the configurable fields
                        of a StatefulServerSetVolume.
                      properties:
                        metadata:
                          description: StatefulServerSetVolumeMetadata are the configurable
                            fields of a StatefulServerSetVolumeMetadata.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              description: 'Name from which the Volume name will be
                                generated. Replica index will be appended. Resulting
                                name will be in format: {name}-{replicaIndex}-{version}'
                              maxLength: 55
                              pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                              type: string
                          required:
                          - name
                          type: object
                        spec:
                          description: StatefulServerSetVolumeSpec are the configurable
                            fields of a StatefulServerSetVolumeSpec.
                          properties:
                            image:
                              description: The public image UUID or a public image
                                alias.
                              type: string
                            size:
                              description: The size of the volume in GB. Disk size
                                can only be increased.
                              type: number
                            type:
                              description: 'Hardware type of the volume. E.g: HDD;SSD;SSD
                                Standard;SSD Premium'
                              enum:
                              - HDD
                              - SSD
                              - SSD Standard
                              - SSD Premium
                              example: SSD
                              type: string
                            userData:
                              description: The cloud init configuration in base64
                                encoding.
                              type: string
                          required:
                          - size
                          - type
                          type: object
                      required:
                      - metadata
                      - spec
                      type: object
                    type: array
                required:
                - bootVolumeTemplate
                - datacenterConfig
                - deploymentStrategy
                - lans
                - replicas
                - template
                - volumes
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A StatefulServerSetStatus represents the observed state of
              a StatefulServerSet.
            properties:
              atProvider:
                description: StatefulServerSetObservation are the observable fields
                  of a StatefulServerSet.
                properties:
                  conditions:
                    description: Conditions of the resource.
                    items:
                      description: A Condition that may apply to a resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            LastTransitionTime is the last time this condition transitioned from one
                            status to another.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            A Message containing details about this condition's last transition from
                            one status to another, if any.
                          type: string
                        observedGeneration:
                          description: |-
                            ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          type: integer
                        reason:
                          description: A Reason for this condition's last transition
                            from one status to another.
                          type: string
                        status:
                          description: Status of this condition; is it currently True,
                            False, or Unknown?
                          type: string
                        type:
                          description: |-
                            Type of this condition. At most one of each condition type may apply to
                            a resource at any point in time.
                          type: string
                      required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  dataVolumeStatuses:
                    items:
                      description: StatefulServerSetVolumeStatus contains the status
                        of a Volume.
                      properties:
                        atProvider:
                          description: VolumeObservation are the observable fields
                            of a Volume.
                          properties:
                            name:
                              type: string
                            pciSlot:
                              format: int32
                              type: integer
                            serverName:
                              type: string
                            size:
                              type: number
                            state:
                              type: string
                            volumeId:
                              type: string
                          type: object
                        conditions:
                          description: Conditions of the resource.
                          items:
                            description: A Condition that may apply to a resource.
                            properties:
                              lastTransitionTime:
                                description: |-
                                  LastTransitionTime is the last time this condition transitioned from one
                                  status to another.
                                format: date-time
                                type: string
                              message:
                                description: |-
                                  A Message containing details about this condition's last transition from
                                  one status to another, if any.
                                type: string
                              observedGeneration:
                                description: |-
                                  ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                                  For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                  with respect to the current state of the instance.
                                format: int64
                                type: integer
                              reason:
                                description: A Reason for this condition's last transition
                                  from one status to another.
                                type: string
                              status:
                                description: Status of this condition; is it currently
                                  True, False, or Unknown?
                                type: string
                              type:
                                description: |-
                                  Type of this condition. At most one of each condition type may apply to
                                  a resource at any point in time.
                                type: string
                            required:
                            - lastTransitionTime
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - type
                          x-kubernetes-list-type: map
                        observedGeneration:
                          description: |-
                            ObservedGeneration is the latest metadata.generation
                            which resulted in either a ready state, or stalled due to error
                            it can not recover from without human intervention.
                          format: int64
                          type: integer
                        replicaIndex:
                          type: integer
                      required:
                      - replicaIndex
                      type: object
                    type: array
                  lanStatuses:
                    items:
                      description: StatefulServerSetLanStatus contains the status
                        of a LAN.
                      properties:
                        atProvider:
                          description: LanObservation are the observable fields of
                            a Lan.
                          properties:
                            ipFailovers:
                              description: IPFailovers will be set using IPFailover
                                CR
                              items:
                                type: string
                              type: array
                            ipv4Cidr:
                              type: string
                            lanId:
                              type: string
                            name:
                              type: string
                            state:
                              type: string
                          type: object
                        conditions:
                          description: Conditions of the resource.
                          items:
                            description: A Condition that may apply to a resource.
                            properties:
                              lastTransitionTime:
                                description: |-
                                  LastTransitionTime is the last time this condition transitioned from one
                                  status to another.
                                format: date-time
                                type: string
                              message:
                                description: |-
                                  A Message containing details about this condition's last transition from
                                  one status to another, if any.
                                type: string
                              observedGeneration:
                                description: |-
                                  ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                                  For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                  with respect to the current state of the instance.
                                format: int64
                                type: integer
                              reason:
                                description: A Reason for this condition's last transition
                                  from one status to another.
                                type: string
                              status:
                                description: Status of this condition; is it currently
                                  True, False, or Unknown?
                                type: string
                              type:
                                description: |-
                                  Type of this condition. At most one of each condition type may apply to
                                  a resource at any point in time.
                                type: string
                            required:
                            - lastTransitionTime
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - type
                          x-kubernetes-list-type: map
                        ipv6CidrBlock:
                          type: string
                        observedGeneration:
                          description: |-
                            ObservedGeneration is the latest metadata.generation
                            which resulted in either a ready state, or stalled due to error
                            it can not recover from without human intervention.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  observedGeneration:
                    description: |-
                      ObservedGeneration is the latest metadata.generation
                      which resulted in either a ready state, or stalled due to error
                      it can not recover from without human intervention.
                    format: int64
                    type: integer
                  replicaStatuses:
                    items:
                      description: ServerSetReplicaStatus contains the status of a
                        Server Replica.
                      properties:
                        conditions:
                          description: Conditions of the resource.
                          items:
                            description: A Condition that may apply to a resource.
                            properties:
                              lastTransitionTime:
                                description: |-
                                  LastTransitionTime is the last time this condition transitioned from one
                                  status to another.
                                format: date-time
                                type: string
                              message:
                                description: |-
                                  A Message containing details about this condition's last transition from
                                  one status to another, if any.
                                type: string
                              observedGeneration:
                                description: |-
                                  ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                                  For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                  with respect to the current state of the instance.
                                format: int64
                                type: integer
                              reason:
                                description: A Reason for this condition's last transition
                                  from one status to another.
                                type: string
                              status:
                                description: Status of this condition; is it currently
                                  True, False, or Unknown?
                                type: string
                              type:
                                description: |-
                                  Type of this condition. At most one of each condition type may apply to
                                  a resource at any point in time.
                                type: string
                            required:
                            - lastTransitionTime
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - type
                          x-kubernetes-list-type: map
                        errorMessage:
                          description: ErrorMessage relayed from the backend.
                          type: string
                        hostname:
                          type: string
                        lastModified:
                          format: date-time
                          type: string
                        name:
                          type: string
                        nicStatus:
                          items:
                            description: A NicStatus represents the observed state
                              of a Nic.
                            properties:
                              atProvider:
                                description: NicObservation are the observable fields
                                  of a Nic.
                                properties:
                                  ips:
                                    items:
                                      type: string
                                    type: array
                                  mac:
                                    type: string
                                  name:
                                    type: string
                                  nicId:
                                    type: string
                                  pciSlot:
                                    format: int32
                                    type: integer
                                  state:
                                    type: string
                                type: object
                              conditions:
                                description: Conditions of the resource.
                                items:
                                  description: A Condition that may apply to a resource.
                                  properties:
                                    lastTransitionTime:
                                      description: |-
                                        LastTransitionTime is the last time this condition transitioned from one
                                        status to another.
                                      format: date-time
                                      type: string
                                    message:
                                      description: |-
                                        A Message containing details about this condition's last transition from
                                        one status to another, if any.
                                      type: string
                                    observedGeneration:
                                      description: |-
                                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                        with respect to the current state of the instance.
                                      format: int64
                                      type: integer
                                    reason:
                                      description: A Reason for this condition's last
                                        transition from one status to another.
                                      type: string
                                    status:
                                      description: Status of this condition; is it
                                        currently True, False, or Unknown?
                                      type: string
                                    type:
                                      description: |-
                                        Type of this condition. At most one of each condition type may apply to
                                        a resource at any point in time.
                                      type: string
                                  required:
                                  - lastTransitionTime
                                  - reason
                                  - status
                                  - type
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - type
                                x-kubernetes-list-type: map
                              observedGeneration:
                                description: |-
                                  ObservedGeneration is the latest metadata.generation
                                  which resulted in either a ready state, or stalled due to error
                                  it can not recover from without human intervention.
                                format: int64
                                type: integer
                            type: object
                          type: array
                        observedGeneration:
                          description: |-
                            ObservedGeneration is the latest metadata.generation
                            which resulted in either a ready state, or stalled due to error
                            it can not recover from without human intervention.
                          format: int64
                          type: integer
                        replicaIndex:
                          type: integer
                        role:
                          description: |-
                            Role is the role of a ServerSet Replica. It can be ACTIVE or PASSIVE. The default value is PASSIVE.
                            When a ServerSet Replica has role ACTIVE, it is the primary server and is used to serve the traffic.
                          enum:
                          - ACTIVE
                          - PASSIVE
                          type: string
                        status:
                          enum:
                          - UNKNOWN
                          - READY
                          - ERROR
                          - BUSY
                          type: string
                        substitutionReplacement:
                          additionalProperties:
                            type: string
                          type: object
                      required:
                      - hostname
                      - name
                      - replicaIndex
                      - role
                      - status
                      type: object
                    type: array
                  replicas:
                    description: Replicas is the count of ready replicas.
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.forProvider.replicas
        statusReplicasPath: .status.atProvider.replicas
      status: {}
