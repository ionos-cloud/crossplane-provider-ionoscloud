---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: nodepools.k8s.ionoscloud.crossplane.io
spec:
  group: k8s.ionoscloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - ionoscloud
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    singular: nodepool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.clusterConfig.clusterId
      name: CLUSTER ID
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: NODEPOOL ID
      type: string
    - jsonPath: .spec.forProvider.name
      name: NODEPOOL NAME
      type: string
    - jsonPath: .spec.forProvider.datacenterConfig.datacenterId
      name: DATACENTER ID
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.k8sVersion
      name: K8S VERSION
      priority: 1
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A NodePool is an example API type.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A NodePoolSpec defines the desired state of a NodePool.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: |-
                  NodePoolParameters are the observable fields of a NodePool.
                  Required fields in order to create a K8s NodePool:
                  ClusterConfig,
                  Name,
                  DatacenterConfig,
                  NodeCount,
                  CoresCount,
                  RAMSize,
                  AvailabilityZone,
                  StorageType,
                  StorageSize.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Map of annotations attached to NodePool.
                    type: object
                  autoScaling:
                    description: |-
                      property to be set when auto-scaling needs to be enabled for the NodePool.
                      By default, auto-scaling is not enabled.
                    properties:
                      maxNodeCount:
                        description: |-
                          The maximum number of worker nodes that the managed node pool can scale-out.
                          Should be set together with 'minNodeCount'.
                          Value for this attribute must be greater than equal to 1 and minNodeCount.
                        format: int32
                        minimum: 1
                        type: integer
                      minNodeCount:
                        description: |-
                          The minimum number of worker nodes that the managed node group can scale in.
                          Should be set together with 'maxNodeCount'.
                          Value for this attribute must be greater than equal to 1 and less than equal to maxNodeCount.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                  availabilityZone:
                    description: The availability zone in which the target VM should
                      be provisioned.
                    enum:
                    - AUTO
                    - ZONE_1
                    - ZONE_2
                    type: string
                  clusterConfig:
                    description: The K8s Cluster on which the NodePool will be created.
                    properties:
                      clusterId:
                        description: |-
                          ClusterID is the ID of the Cluster on which the resource will be created.
                          It needs to be provided via directly or via reference.
                        format: uuid
                        type: string
                      clusterIdRef:
                        description: ClusterIDRef references to a Cluster to retrieve
                          its ID.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      clusterIdSelector:
                        description: ClusterIDSelector selects reference to a Cluster
                          to retrieve its ClusterID.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                  coresCount:
                    description: The number of cores for the node.
                    format: int32
                    type: integer
                  cpuFamily:
                    description: |-
                      A valid CPU family name.
                      If no CPUFamily is provided, it will be set the first CPUFamily supported by the location.
                    type: string
                  datacenterConfig:
                    description: A Datacenter, to which the user has access.
                    properties:
                      datacenterId:
                        description: |-
                          DatacenterID is the ID of the Datacenter on which the resource should have access.
                          It needs to be provided via directly or via reference.
                        format: uuid
                        type: string
                      datacenterIdRef:
                        description: DatacenterIDRef references to a Datacenter to
                          retrieve its ID.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      datacenterIdSelector:
                        description: DatacenterIDSelector selects reference to a Datacenter
                          to retrieve its DatacenterID.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                  k8sVersion:
                    description: |-
                      The Kubernetes version the NodePool is running. This imposes restrictions on what Kubernetes
                      versions can be run in a cluster's NodePools. Additionally, not all Kubernetes versions are
                      viable upgrade targets for all prior versions.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Map of labels attached to NodePool.
                    type: object
                  lans:
                    description: Array of additional private LANs attached to worker
                      nodes.
                    items:
                      description: KubernetesNodePoolLan struct for KubernetesNodePoolLan.
                      properties:
                        dhcp:
                          description: Indicates if the Kubernetes NodePool LAN will
                            reserve an IP using DHCP.
                          type: boolean
                        lanConfig:
                          description: The LAN of an existing private LAN at the related
                            datacenter.
                          properties:
                            lanId:
                              description: |-
                                LanID is the ID of the Lan on which the NodePool will connect to.
                                It needs to be provided via directly or via reference.
                              type: string
                            lanIdRef:
                              description: LanIDRef references to a Lan to retrieve
                                its ID.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            lanIdSelector:
                              description: LanIDSelector selects reference to a Lan
                                to retrieve its LanID.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        routes:
                          description: Array of additional LANs Routes attached to
                            worker nodes.
                          items:
                            description: KubernetesNodePoolLanRoutes struct for KubernetesNodePoolLanRoutes.
                            properties:
                              gatewayIp:
                                description: IPv4 or IPv6 Gateway IP for the route.
                                type: string
                              network:
                                description: IPv4 or IPv6 CIDR to be routed via the
                                  interface.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  maintenanceWindow:
                    description: |-
                      The maintenance window is used for updating the software on the NodePool's nodes and for upgrading the NodePool's K8s version.
                      If no value is given, one is chosen dynamically, so there is no fixed default.
                    properties:
                      dayOfTheWeek:
                        description: DayOfTheWeek The name of the week day.
                        type: string
                      time:
                        type: string
                    type: object
                  name:
                    description: |-
                      A Kubernetes node pool name. Valid Kubernetes node pool name must be 63 characters or less
                      and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with
                      dashes (-), underscores (_), dots (.), and alphanumerics between.
                    type: string
                  nodeCount:
                    description: The number of nodes that make up the node pool.
                    format: int32
                    type: integer
                  publicIpsConfigs:
                    description: |-
                      Optional array of reserved public IP addresses to be used by the nodes.
                      IPs must be from same location as the Datacenter used for the NodePool.
                      The array must contain one more IP than the maximum possible number of nodes
                      (nodeCount+1 for fixed number of nodes or maxNodeCount+1 when auto-scaling is used).
                      The extra IP is used when the nodes are rebuilt.
                      IPs can be set directly or via reference and indexes.
                    properties:
                      ips:
                        description: |-
                          Use IPs to set specific IPs to the resource. If both IPs and IPsBlockConfigs are set,
                          only `ips` field will be considered.
                        items:
                          type: string
                        type: array
                      ipsBlockConfigs:
                        description: |-
                          Use IpsBlockConfigs to reference existing IPBlocks, and to mention the indexes for the IPs.
                          Indexes start from 0, and multiple indexes can be set. If no index is set, all IPs from the
                          corresponding IPBlock will be assigned to the resource.
                        items:
                          description: |-
                            IPsBlockConfig - used by resources that need to link IPBlock via id or via reference
                            to get multiple IPs.
                          properties:
                            indexes:
                              description: |-
                                Indexes are referring to the IPs indexes retrieved from the IPBlock.
                                Indexes are starting from 0. If no index is set, all IPs from the
                                corresponding IPBlock will be assigned.
                              items:
                                type: integer
                              type: array
                            ipBlockId:
                              description: |-
                                IPBlockID is the ID of the IPBlock on which the resource will be created.
                                It needs to be provided via directly or via reference.
                              format: uuid
                              type: string
                            ipBlockIdRef:
                              description: IPBlockIDRef references to a IPBlock to
                                retrieve its ID.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            ipBlockIdSelector:
                              description: IPBlockIDSelector selects reference to
                                a IPBlock to retrieve its IPBlockID.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                    type: object
                  ramSize:
                    description: The RAM size for the node. Must be set in multiples
                      of 1024 MB, with minimum size is of 2048 MB.
                    format: int32
                    minimum: 2048
                    multipleOf: 1024
                    type: integer
                  storageSize:
                    description: The size of the volume in GB. The size should be
                      greater than 10GB.
                    format: int32
                    minimum: 10
                    type: integer
                  storageType:
                    description: The type of hardware for the volume.
                    enum:
                    - HDD
                    - SSD
                    type: string
                required:
                - availabilityZone
                - clusterConfig
                - coresCount
                - datacenterConfig
                - name
                - nodeCount
                - ramSize
                - storageSize
                - storageType
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A NodePoolStatus represents the observed state of a NodePool.
            properties:
              atProvider:
                description: NodePoolObservation are the observable fields of a NodePool.
                properties:
                  availableUpgradeVersions:
                    items:
                      type: string
                    type: array
                  cpuFamily:
                    type: string
                  nodePoolId:
                    type: string
                  publicIps:
                    items:
                      type: string
                    type: array
                  state:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
