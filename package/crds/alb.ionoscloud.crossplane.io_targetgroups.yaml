---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: targetgroups.alb.ionoscloud.crossplane.io
spec:
  group: alb.ionoscloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - ionoscloud
    kind: TargetGroup
    listKind: TargetGroupList
    plural: targetgroups
    singular: targetgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: TARGETGROUP ID
      type: string
    - jsonPath: .spec.forProvider.name
      name: TARGETGROUP NAME
      type: string
    - jsonPath: .spec.forProvider.protocol
      name: PROTOCOL
      priority: 1
      type: string
    - jsonPath: .spec.forProvider.algorithm
      name: ALGORITHM
      priority: 1
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: An TargetGroup is an example API type.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TargetGroupSpec defines the desired state of an TargetGroup.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: |-
                  TargetGroupParameters are the observable fields of an TargetGroup.
                  Required fields in order to create an TargetGroup:
                  Name,
                  Algorithm,
                  Protocol.
                properties:
                  algorithm:
                    description: Balancing algorithm.
                    enum:
                    - ROUND_ROBIN
                    - LEAST_CONNECTION
                    - RANDOM
                    - SOURCE_IP
                    type: string
                  healthCheck:
                    description: Health check properties for target group.
                    properties:
                      checkInterval:
                        description: The interval in milliseconds between consecutive
                          health checks; default is 2000.
                        format: int32
                        type: integer
                      checkTimeout:
                        description: |-
                          The maximum time in milliseconds to wait for a target to respond to a check.
                          For target VMs with 'Check Interval' set, the lesser of the two  values
                          is used once the TCP connection is established.
                        format: int32
                        type: integer
                      retries:
                        description: |-
                          The maximum number of attempts to reconnect to a target after a connection failure.
                          Valid range is 0 to 65535, and default is three reconnection attempts.
                        format: int32
                        type: integer
                    type: object
                  httpHealthCheck:
                    description: HTTP health check properties for target group.
                    properties:
                      matchType:
                        description: The match type for the HTTP health check.
                        enum:
                        - ""
                        - STATUS_CODE
                        - RESPONSE_BODY
                        type: string
                      method:
                        description: The method for the HTTP health check.
                        enum:
                        - HEAD
                        - PUT
                        - POST
                        - GET
                        - TRACE
                        - PATCH
                        - OPTIONS
                        type: string
                      negate:
                        type: boolean
                      path:
                        description: The path (destination URL) for the HTTP health
                          check request; the default is `/`.
                        type: string
                      regex:
                        type: boolean
                      response:
                        description: The response returned by the request, depending
                          on the match type.
                        type: string
                    required:
                    - matchType
                    - response
                    type: object
                  name:
                    description: The name of the target group.
                    type: string
                  protocol:
                    description: Balancing protocol.
                    enum:
                    - HTTP
                    type: string
                  targets:
                    description: Array of items in the collection.
                    items:
                      description: |-
                        TargetGroupTarget struct for TargetGroupTarget
                        Required fields in order to create an TargetGroupTarget:
                        IPConfig,
                        Port,
                        Weight.
                      properties:
                        healthCheckEnabled:
                          description: |-
                            Makes the target available only if it accepts periodic health check TCP connection attempts;
                            when turned off, the target is considered always available.
                            The health check only consists of a connection attempt to the address and port of the target.
                          type: boolean
                        ip:
                          description: The IP of the balanced target VM.
                          type: string
                        maintenanceEnabled:
                          description: Maintenance mode prevents the target from receiving
                            balanced traffic.
                          type: boolean
                        port:
                          description: The port of the balanced target service; valid
                            range is 1 to 65535.
                          format: int32
                          type: integer
                        weight:
                          description: |-
                            Traffic is distributed in proportion to target weight, relative to the combined weight of all targets.
                            A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1;
                            targets with weight of 0 do not participate in load balancing but still accept persistent connections.
                            It is best use values in the middle of the range to leave room for later adjustments.
                          format: int32
                          type: integer
                      required:
                      - ip
                      - port
                      - weight
                      type: object
                    type: array
                required:
                - algorithm
                - name
                - protocol
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TargetGroupStatus represents the observed state of an TargetGroup.
            properties:
              atProvider:
                description: TargetGroupObservation are the observable fields of an
                  TargetGroup.
                properties:
                  state:
                    type: string
                  targetGroupId:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
