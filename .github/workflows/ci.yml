name: CI

on:
  push:
    branches:
      - master
  pull_request: { }
  workflow_dispatch: { }


env:
  GOLANGCI_VERSION: 'v1.54.0'
  DOCKER_BUILDX_VERSION: 'v0.11.2'

jobs:
  detect-noop:
    runs-on: ubuntu-20.04
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@v2.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["**.md", "**.png", "**.jpg","docs/**.md", "examples/**.yaml"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'
          concurrent_skipping: false

  lint:
    runs-on: ubuntu-20.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Vendor Dependencies
        run: make vendor vendor.check
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANGCI_VERSION }}
          skip-cache: true
          args: --timeout 10m0s --verbose --out-format=colored-line-number
  unit-tests:
    runs-on: ubuntu-20.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Vendor Dependencies
        run: make vendor vendor.check
      - name: Run Unit Tests
        run: make test

  e2e-tests:
    runs-on: ubuntu-20.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}
          install: true
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Fetch History
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Vendor Dependencies
        run: make vendor vendor.check
      - name: Build Helm Chart
        run: make -j2 build VERSION=latest --debug
        env:
          # We're using docker buildx, which doesn't actually load the images it
          # builds by default. Specifying --load does so.
          BUILD_ARGS: "--load"
      #          Use only if the VERSION is not latest
      #      - name: Docker Images Tag
      #        run: make docker.tag VERSION=latest
      - name: Docker Images List
        run: make docker.list | grep "crossplane-provider-ionoscloud"
      - name: Run E2E Tests
        run: make e2e VERSION=latest USE_HELM3=true TEST_COMPUTE=false TEST_SERVERSET=true
        env:
          IONOS_USERNAME: ${{ secrets.IONOS_USERNAME }}
          IONOS_PASSWORD: ${{ secrets.IONOS_PASSWORD }}

  publish-artifacts:
    runs-on: ubuntu-20.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}
          install: true
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Fetch History
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Vendor Dependencies
        run: make vendor vendor.check
      - name: Build Artifacts
        run: make -j2 build VERSION=latest
        env:
          BUILD_ARGS: "--load"
      - name: Publish Artifacts to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: _output/**
